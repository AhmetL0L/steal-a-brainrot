local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local PlaceId = game.PlaceId
local JobId = game.JobId

-- Ayarlar
local targetBasePetNames = {
    "Tralalero Tralala",
    "Los Tralaleritos",
    "La Vacca Saturno Saturnita",
    "Graipuss Medussi",
    "Odin Din Din Dun" -- Yeni eklenen pet
}

local petPrefixes = {"", "Gold ", "Diamond ", "Bloodrot "}

local checkInterval = 5
local maxDisplayLines = 50
local lineHeight = 20
local linePadding = 5

-- Konsol Çerçevesi Boyut Ayarları (Açık ve Kapalı Durumlar İçin)
local consoleOpenWidth = 400
local consoleOpenHeight = 200
local consoleClosedWidth = 100
local consoleClosedHeight = 30

-- Server Hop Butonu Ayarları
local serverHopButtonWidth = 120
local serverHopButtonHeight = 40
local serverHopButtonPosX = 0.5
local serverHopButtonOffsetFromCenter = 70
local serverHopButtonPosY = 0
local serverHopButtonOffsetFromTop = 10
local serverHopRetryDelay = 3
local maxServerHopWarningThreshold = 10
local maxServerHopRetries = math.huge

-- Konsol Kapat/Aç Butonu Ayarları
local toggleConsoleButtonWidth = 80
local toggleConsoleButtonHeight = 30
local toggleConsoleButtonPosX = 0
local toggleConsoleButtonOffsetFromLeft = 10
local toggleConsoleButtonPosY = 0
local toggleConsoleButtonOffsetFromTop = 220

-- Tralalero Tralala için özel ESP Ayarları (Mavi ve daha parlak)
local tralaleroHighlightColor = Color3.fromRGB(0, 0, 255) -- Mavi renk
local tralaleroFillTransparency = 0.2 -- Daha az şeffaf
local tralaleroOutlineTransparency = 0 -- Tamamen opak çizgi

-- Odin Din Din Dun için özel ESP Ayarları (Turuncu ve daha parlak)
local odinHighlightColor = Color3.fromRGB(255, 165, 0) -- Turuncu renk
local odinFillTransparency = 0.2 -- Daha az şeffaf
local odinOutlineTransparency = 0 -- Tamamen opak çizgi

-- Diğer petler için özel ESP Ayarları (Sarı ve daha parlak)
local otherPetHighlightColor = Color3.fromRGB(255, 255, 0) -- Sarı renk
local otherPetFillTransparency = 0.2 -- Daha az şeffaf
local otherPetOutlineTransparency = 0 -- Tamamen opak çizgi

-- Aktif Highlight objelerini takip etmek için tablo
local activeHighlights = {}

-- Konum listesi için ScreenGui
local locationDisplayGui = Instance.new("ScreenGui")
locationDisplayGui.Name = "LocationDisplayGui"
locationDisplayGui.DisplayOrder = 100
locationDisplayGui.Parent = PlayerGui

local displayFrame = Instance.new("Frame")
displayFrame.Size = UDim2.new(0, consoleOpenWidth, 0, consoleOpenHeight)
displayFrame.Position = UDim2.new(0, 10, 0, 10)
displayFrame.BackgroundColor3 = Color3.new(0, 0, 0)
displayFrame.BackgroundTransparency = 0.7
displayFrame.BorderSizePixel = 0
displayFrame.ClipsDescendants = true
displayFrame.Parent = locationDisplayGui

local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, 0, 1, 0)
scrollFrame.Position = UDim2.new(0, 0, 0, 0)
scrollFrame.BackgroundTransparency = 1
scrollFrame.BorderSizePixel = 0
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollFrame.VerticalScrollBarInset = Enum.ScrollBarInset.Always
scrollFrame.Parent = displayFrame

local listLayout = Instance.new("UIListLayout")
listLayout.FillDirection = Enum.FillDirection.Vertical
listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
listLayout.VerticalAlignment = Enum.VerticalAlignment.Top
listLayout.Padding = UDim.new(0, linePadding)
listLayout.Parent = scrollFrame

local activeLocationLabels = {}
local isConsoleOpen = true

-- Tüm eski highlight'ları temizleyen fonksiyon
local function clearAllHighlights()
    for obj, highlightInstance in pairs(activeHighlights) do
        if highlightInstance and highlightInstance.Parent then
            highlightInstance:Destroy()
        end
    end
    activeHighlights = {}
end

local function clearOldLabels()
    for _, label in pairs(activeLocationLabels) do
        if label.Parent then
            label:Destroy()
        end
    end
    activeLocationLabels = {}
end

-- Objeleri tüm oyunda arayan ve konumlarını güncelleyen fonksiyon
local function updateObjectLocations()
    clearOldLabels()
    clearAllHighlights() -- Her kontrolde eski highlight'ları temizle
    local foundObjectsCount = 0
    local allObjects = game:GetDescendants()
    
    local foundGameLocations = {}
    local foundReplicatedStorageNames = {}

    local allPossiblePetNames = {}
    for _, baseName in ipairs(targetBasePetNames) do
        for _, prefix in ipairs(petPrefixes) do
            allPossiblePetNames[prefix .. baseName] = true
        end
    end

    for _, obj in ipairs(allObjects) do
        if obj:IsA("Model") or obj:IsA("Part") then
            if allPossiblePetNames[obj.Name] then
                if obj:IsDescendantOf(game.ReplicatedStorage) then
                    -- ReplicatedStorage'da bulunursa sadece ismini kaydet
                    foundReplicatedStorageNames[obj.Name] = true
                else
                    -- Başka bir yerde bulunursa konumunu kaydet
                    table.insert(foundGameLocations, obj:GetFullName())
                    foundObjectsCount = foundObjectsCount + 1
                    
                    -- Highlight objesi ekle
                    local highlight = Instance.new("Highlight")
                    
                    -- Pet adına göre highlight rengini ve şeffaflığını ayarla
                    if string.find(obj.Name, "Tralalero Tralala") then
                        highlight.FillColor = tralaleroHighlightColor
                        highlight.FillTransparency = tralaleroFillTransparency
                        highlight.OutlineColor = tralaleroHighlightColor
                        highlight.OutlineTransparency = tralaleroOutlineTransparency
                    elseif string.find(obj.Name, "Odin Din Din Dun") then -- Yeni kontrol
                        highlight.FillColor = odinHighlightColor
                        highlight.FillTransparency = odinFillTransparency
                        highlight.OutlineColor = odinHighlightColor
                        highlight.OutlineTransparency = odinOutlineTransparency
                    else
                        highlight.FillColor = otherPetHighlightColor
                        highlight.FillTransparency = otherPetFillTransparency
                        highlight.OutlineColor = otherPetHighlightColor
                        highlight.OutlineTransparency = otherPetOutlineTransparency
                    end
                    
                    highlight.Parent = obj -- Highlight'ı pet objesinin içine yerleştir
                    
                    activeHighlights[obj] = highlight -- Takip listesine ekle
                end
            end
        end
    end

    local labelIndex = 1

    -- ReplicatedStorage'da bulunan petleri göster
    for petName, _ in pairs(foundReplicatedStorageNames) do
        if labelIndex > maxDisplayLines then break end
        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 0, lineHeight)
        textLabel.BackgroundTransparency = 1
        textLabel.TextColor3 = Color3.new(0.5, 0.8, 1) -- Açık mavi renk
        textLabel.Font = Enum.Font.SourceSans
        textLabel.TextSize = 16
        textLabel.TextXAlignment = Enum.TextXAlignment.Left
        textLabel.TextYAlignment = Enum.TextYAlignment.Top
        textLabel.TextWrapped = true
        textLabel.Text = "Aranıyor: " .. petName -- Sadece isim
        textLabel.Parent = scrollFrame
        table.insert(activeLocationLabels, textLabel)
        labelIndex = labelIndex + 1
        print("ReplicatedStorage'da bulundu: " .. petName)
    end

    -- Oyunda bulunan petleri göster
    for i, locationPath in ipairs(foundGameLocations) do
        if labelIndex > maxDisplayLines then break end

        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 0, lineHeight)
        textLabel.BackgroundTransparency = 1
        textLabel.TextColor3 = Color3.new(1, 1, 1)
        textLabel.Font = Enum.Font.SourceSans
        textLabel.TextSize = 16
        textLabel.TextXAlignment = Enum.TextXAlignment.Left
        textLabel.TextYAlignment = Enum.TextYAlignment.Top
        textLabel.TextWrapped = true
        textLabel.Text = "Bulundu: " .. locationPath
        textLabel.Parent = scrollFrame
        table.insert(activeLocationLabels, textLabel)
        labelIndex = labelIndex + 1
        
        print("Bulundu! Konum: " .. locationPath)
    end

    if foundObjectsCount == 0 and table.getn(foundReplicatedStorageNames) == 0 then
        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 0, lineHeight)
        textLabel.BackgroundTransparency = 1
        textLabel.TextColor3 = Color3.new(1, 1, 1)
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.TextSize = 16
        textLabel.TextXAlignment = Enum.TextXAlignment.Left
        textLabel.TextYAlignment = Enum.TextYAlignment.Top
        textLabel.Text = "Aranan petler bulunamadı."
        textLabel.Parent = scrollFrame
        table.insert(activeLocationLabels, textLabel)
        
        print("Aranan petler bulunamadı.")
    end

    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, listLayout.AbsoluteContentSize.Y)
    scrollFrame.CanvasPosition = Vector2.new(0, 0)

    return foundObjectsCount > 0 or table.getn(foundReplicatedStorageNames) > 0
end

local function serverHop()
    local retryCount = 0
    while true do
        retryCount = retryCount + 1
        
        if retryCount > maxServerHopWarningThreshold then
            print("UYARI: " .. maxServerHopWarningThreshold .. " denemedir uygun sunucu bulunamıyor. Denemeye devam ediliyor...")
        end

        print("Sunucu aranıyor... (Deneme " .. retryCount .. ")")
        local servers = {}
        
        local successGet, reqResult = pcall(function()
            return game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true")
        end)
        
        local body = nil
        if successGet then
            local decodedSuccess, decodedBody = pcall(HttpService.JSONDecode, HttpService, reqResult)
            if decodedSuccess then
                body = decodedBody
            else
                print("Hata: JSON çözümleme başarısız oldu. " .. tostring(decodedBody))
            end
        else
            print("Hata: Sunucu listesi alınamadı. " .. tostring(reqResult))
        end

        if body and body.data then
            for i, v in next, body.data do
                if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
                    table.insert(servers, 1, v.id)
                end
            end
        end

        if #servers > 0 then
            local targetServerId = servers[math.random(1, #servers)]
            print("Yeni sunucu bulundu: " .. targetServerId .. ". Teleport olunuyor...")
            
            local successTeleport, errorMessage = pcall(function()
                TeleportService:TeleportToPlaceInstance(PlaceId, targetServerId, Players.LocalPlayer)
            end)

            if successTeleport then
                return true
            else
                print("Teleport hatası: " .. tostring(errorMessage))
                wait(serverHopRetryDelay)
            end
        else
            print("Uyarı: Hiç boş sunucu bulunamadı. Tekrar deneniyor...")
            wait(serverHopRetryDelay)
        end
    end
    print("Maksimum deneme sayısına ulaşıldı. Yeni uygun sunucu bulunamadı, teleport başarısız.")
    return false
end

-- MANUEL SERVERHOP BUTONU
local serverHopButtonGui = Instance.new("ScreenGui")
serverHopButtonGui.Name = "ServerHopButtonGui"
serverHopButtonGui.DisplayOrder = 101
serverHopButtonGui.Parent = PlayerGui

local serverHopButton = Instance.new("TextButton")
serverHopButton.Size = UDim2.new(0, serverHopButtonWidth, 0, serverHopButtonHeight)
serverHopButton.Position = UDim2.new(serverHopButtonPosX, serverHopButtonOffsetFromCenter - (serverHopButtonWidth / 2), serverHopButtonPosY, serverHopButtonOffsetFromTop)
serverHopButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
serverHopButton.TextColor3 = Color3.new(1, 1, 1)
serverHopButton.TextScaled = true
serverHopButton.Font = Enum.Font.SourceSansBold
serverHopButton.Text = "Serverhop"
serverHopButton.Parent = serverHopButtonGui

serverHopButton.MouseButton1Click:Connect(function()
    serverHopButton.Text = "Hoplanıyor..."
    serverHopButton.Active = false
    local successful = serverHop()
    if not successful then
        serverHopButton.Text = "Hoplanamadı!"
        wait(2)
        serverHopButton.Text = "Serverhop"
        serverHopButton.Active = true
    end
end)

-- KONSOL Kapat/Aç Butonu
local toggleConsoleButtonGui = Instance.new("ScreenGui")
toggleConsoleButtonGui.Name = "ToggleConsoleButtonGui"
toggleConsoleButtonGui.DisplayOrder = 102
toggleConsoleButtonGui.Parent = PlayerGui

local toggleConsoleButton = Instance.new("TextButton")
toggleConsoleButton.Size = UDim2.new(0, toggleConsoleButtonWidth, 0, toggleConsoleButtonHeight)
toggleConsoleButton.Position = UDim2.new(toggleConsoleButtonPosX, toggleConsoleButtonOffsetFromLeft, toggleConsoleButtonPosY, toggleConsoleButtonOffsetFromTop)
toggleConsoleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleConsoleButton.TextColor3 = Color3.new(1, 1, 1)
toggleConsoleButton.TextScaled = true
toggleConsoleButton.Font = Enum.Font.SourceSansBold
toggleConsoleButton.Text = "Listeyi Kapat"
toggleConsoleButton.Parent = toggleConsoleButtonGui

toggleConsoleButton.MouseButton1Click:Connect(function()
    isConsoleOpen = not isConsoleOpen
    if isConsoleOpen then
        displayFrame.Size = UDim2.new(0, consoleOpenWidth, 0, consoleOpenHeight)
        displayFrame.BackgroundTransparency = 0.7
        toggleConsoleButton.Text = "Listeyi Kapat"
    else
        displayFrame.Size = UDim2.new(0, consoleClosedWidth, 0, consoleClosedHeight)
        displayFrame.BackgroundTransparency = 1
        toggleConsoleButton.Text = "Listeyi Aç"
    end
end)

-- Utility function to check if a value is a number
local function isNumber(value)
    return type(value) == "number"
end

-- Humanoid modification connections
local HumanModCons = {}

-- Define the loopspeed function
local function loopspeed(args, speaker)
    local speed = args[1] or 16
    if args[2] then -- This condition seems redundant based on typical command parsing
        speed = args[2] or 16
    end
    if isNumber(speed) then
        local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
        local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
        local function WalkSpeedChange()
            if Char and Human then
                Human.WalkSpeed = speed
            end
        end
        WalkSpeedChange()
        -- Disconnect existing connections if they exist before creating new ones
        if HumanModCons.wsLoop then HumanModCons.wsLoop:Disconnect() end
        HumanModCons.wsLoop = Human:GetPropertyChangedSignal("WalkSpeed"):Connect(WalkSpeedChange)

        if HumanModCons.wsCA then HumanModCons.wsCA:Disconnect() end
        HumanModCons.wsCA = speaker.CharacterAdded:Connect(function(nChar)
            Char, Human = nChar, nChar:WaitForChild("Humanoid")
            WalkSpeedChange()
            -- Disconnect existing wsLoop if Character changes
            if HumanModCons.wsLoop then HumanModCons.wsLoop:Disconnect() end
            HumanModCons.wsLoop = Human:GetPropertyChangedSignal("WalkSpeed"):Connect(WalkSpeedChange)
        end)
    end
end

-- Automatic loopspeed call when player's character is added
LocalPlayer.CharacterAdded:Connect(function(character)
    character:WaitForChild("Humanoid") -- Ensure humanoid is loaded
    loopspeed({45}, LocalPlayer) -- Call loopspeed with 45 as the argument
    print("Loopspeed automatically set to 45.")
end)

-- Initial call if character is already loaded (e.g., if script loads late)
if LocalPlayer.Character then
    local success, err = pcall(function()
        LocalPlayer.Character:WaitForChild("Humanoid")
        loopspeed({45}, LocalPlayer)
        print("Loopspeed automatically set to 45 on initial character load.")
    end)
    if not success then
        warn("Failed to set loopspeed on initial load:", err)
    end
end


print("İlk pet araması öncesi bekleniyor... (" .. checkInterval .. " saniye)")
wait(checkInterval)

while true do
    updateObjectLocations()
    wait(checkInterval)
end
